{"version":3,"file":"counter-element.js","sourceRoot":"","sources":["../src/counter-element.ts"],"names":[],"mappings":";;;;;;AAAA,OAAO,EAAE,UAAU,EAAE,IAAI,EAAE,GAAG,EAAE,MAAM,KAAK,CAAC;AAC5C,OAAO,EAAE,aAAa,EAAE,QAAQ,EAAE,MAAM,mBAAmB,CAAC;AAG5D,IAAM,cAAc,GAApB,MAAM,cAAe,SAAQ,UAAU;IAAvC;;QAC6C,UAAK,GAAG,CAAC,CAAC;IAkBvD,CAAC;IAVU,MAAM;QACb,OAAO,IAAI,CAAA;kBACG,IAAI,CAAC,KAAK;uBACL,IAAI,CAAC,SAAS;KAChC,CAAC;IACJ,CAAC;IAED,SAAS;QACP,IAAI,CAAC,KAAK,IAAI,CAAC,CAAC;IAClB,CAAC;;AAfe,qBAAM,GAAG,GAAG,CAAA;;;;GAI3B,AAJqB,CAIpB;AANyC;IAA1C,QAAQ,CAAC,EAAE,IAAI,EAAE,MAAM,EAAE,OAAO,EAAE,IAAI,EAAE,CAAC;6CAAW;AADjD,cAAc;IADnB,aAAa,CAAC,iBAAiB,CAAC;GAC3B,cAAc,CAmBnB","sourcesContent":["import { LitElement, html, css } from \"lit\";\nimport { customElement, property } from \"lit/decorators.js\";\n\n@customElement(\"counter-element\")\nclass CounterElement extends LitElement {\n  @property({ type: Number, reflect: true }) count = 0;\n\n  static override styles = css`\n    button {\n      font-size: 20px;\n    }\n  `;\n\n  override render() {\n    return html`\n      <p>Count: ${this.count}</p>\n      <button @click=${this.increment}>Increment</button>\n    `;\n  }\n\n  increment() {\n    this.count += 1;\n  }\n}\n\ndeclare global {\n  interface HTMLElementTagNameMap {\n    \"counter-element\": CounterElement;\n  }\n}\n"]}