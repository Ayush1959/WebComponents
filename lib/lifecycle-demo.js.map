{"version":3,"file":"lifecycle-demo.js","sourceRoot":"","sources":["../src/lifecycle-demo.ts"],"names":[],"mappings":";;;;;;AAAA,OAAO,EAAE,UAAU,EAAoB,IAAI,EAAE,MAAM,KAAK,CAAC;AACzD,OAAO,EAAE,aAAa,EAAE,QAAQ,EAAE,MAAM,mBAAmB,CAAC;AAG5D,IAAM,aAAa,GAAnB,MAAM,aAAc,SAAQ,UAAU;IAGpC;QACE,KAAK,EAAE,CAAC;QAHkB,YAAO,GAAG,eAAe,CAAC;QAIpD,OAAO,CAAC,GAAG,CAAC,aAAa,CAAC,CAAC;IAC7B,CAAC;IAEQ,iBAAiB;QACxB,KAAK,CAAC,iBAAiB,EAAE,CAAC;QAC1B,OAAO,CAAC,GAAG,CAAC,oBAAoB,CAAC,CAAC;IACpC,CAAC;IAEQ,oBAAoB;QAC3B,KAAK,CAAC,oBAAoB,EAAE,CAAC;QAC7B,OAAO,CAAC,GAAG,CAAC,uBAAuB,CAAC,CAAC;IACvC,CAAC;IAEQ,wBAAwB,CAC/B,IAAY,EACZ,QAAuB,EACvB,QAAuB;QAEvB,KAAK,CAAC,wBAAwB,CAAC,IAAI,EAAE,QAAQ,EAAE,QAAQ,CAAC,CAAC;QACzD,OAAO,CAAC,GAAG,CAAC,aAAa,IAAI,iBAAiB,QAAQ,OAAO,QAAQ,EAAE,CAAC,CAAC;IAC3E,CAAC;IAEQ,YAAY,CAAC,iBAAsB;QAC1C,OAAO,CAAC,GAAG,CAAC,eAAe,EAAE,iBAAiB,CAAC,CAAC;QAChD,OAAO,IAAI,CAAC;IACd,CAAC;IAEQ,UAAU,CAAC,iBAAsB;QACxC,OAAO,CAAC,GAAG,CAAC,aAAa,EAAE,iBAAiB,CAAC,CAAC;IAChD,CAAC;IAEQ,MAAM,CACb,iBAAoE;QAEpE,KAAK,CAAC,MAAM,CAAC,iBAAiB,CAAC,CAAC;QAChC,OAAO,CAAC,GAAG,CAAC,UAAU,EAAE,iBAAiB,CAAC,CAAC;IAC7C,CAAC;IAEQ,OAAO,CAAC,iBAAsB;QACrC,OAAO,CAAC,GAAG,CAAC,SAAS,EAAE,iBAAiB,CAAC,CAAC;IAC5C,CAAC;IAEQ,YAAY,CAAC,iBAAsB;QAC1C,OAAO,CAAC,GAAG,CAAC,eAAe,EAAE,iBAAiB,CAAC,CAAC;IAClD,CAAC;IAEQ,MAAM;QACb,OAAO,IAAI,CAAA,MAAM,IAAI,CAAC,OAAO,MAAM,CAAC;IACtC,CAAC;CACF,CAAA;AArD6B;IAA3B,QAAQ,CAAC,EAAE,IAAI,EAAE,MAAM,EAAE,CAAC;8CAA2B;AADlD,aAAa;IADlB,aAAa,CAAC,gBAAgB,CAAC;GAC1B,aAAa,CAsDlB","sourcesContent":["import { LitElement, PropertyValueMap, html } from \"lit\";\nimport { customElement, property } from \"lit/decorators.js\";\n\n@customElement(\"lifecycle-demo\")\nclass LifecycleDemo extends LitElement {\n  @property({ type: String }) message = \"Hello, world!\";\n\n  constructor() {\n    super();\n    console.log(\"Constructor\");\n  }\n\n  override connectedCallback() {\n    super.connectedCallback();\n    console.log(\"Connected callback\");\n  }\n\n  override disconnectedCallback() {\n    super.disconnectedCallback();\n    console.log(\"Disconnected callback\");\n  }\n\n  override attributeChangedCallback(\n    name: string,\n    oldValue: string | null,\n    newValue: string | null\n  ) {\n    super.attributeChangedCallback(name, oldValue, newValue);\n    console.log(`Attribute ${name} changed from ${oldValue} to ${newValue}`);\n  }\n\n  override shouldUpdate(changedProperties: any) {\n    console.log(\"Should update\", changedProperties);\n    return true;\n  }\n\n  override willUpdate(changedProperties: any) {\n    console.log(\"Will update\", changedProperties);\n  }\n\n  override update(\n    changedProperties: PropertyValueMap<any> | Map<PropertyKey, unknown>\n  ) {\n    super.update(changedProperties);\n    console.log(\"Updating\", changedProperties);\n  }\n\n  override updated(changedProperties: any) {\n    console.log(\"Updated\", changedProperties);\n  }\n\n  override firstUpdated(changedProperties: any) {\n    console.log(\"First updated\", changedProperties);\n  }\n\n  override render() {\n    return html`<p>${this.message}</p>`;\n  }\n}\n\ndeclare global {\n  interface HTMLElementTagNameMap {\n    \"lifecycle-demo\": LifecycleDemo;\n  }\n}\n"]}